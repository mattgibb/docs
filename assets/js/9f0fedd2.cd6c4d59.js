"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[93966],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80474:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],l={sidebar_position:11,title:"Remove Vertex"},s=void 0,p={unversionedId:"c8ql/examples/remove-vertex",id:"c8ql/examples/remove-vertex",title:"Remove Vertex",description:"Deleting vertices with associated edges is currently not handled via C8QL while the graph management interface and the REST API offer a vertex deletion functionality.",source:"@site/docs/c8ql/examples/remove-vertex.md",sourceDirName:"c8ql/examples",slug:"/c8ql/examples/remove-vertex",permalink:"/docs/c8ql/examples/remove-vertex",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/c8ql/examples/remove-vertex.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"Remove Vertex"},sidebar:"tutorialSidebar",previous:{title:"Queries Without Collections",permalink:"/docs/c8ql/examples/queries-without-collections"},next:{title:"Subqueries",permalink:"/docs/c8ql/examples/subqueries"}},c={},u=[],d={toc:u};function m(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Deleting vertices with associated edges is currently not handled via C8QL while the ",(0,o.kt)("a",{parentName:"p",href:"remove-vertex"},"graph management interface")," and the REST API offer a vertex deletion functionality."),(0,o.kt)("p",null,"However, as shown in this example based on the ",(0,o.kt)("a",{target:"_blank",href:n(71824).Z},"knows_graph"),", a query for this use case can be created."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example Graph",src:n(39014).Z,width:"1586",height:"898"})),(0,o.kt)("p",null,"When deleting vertex ",(0,o.kt)("strong",{parentName:"p"},"eve")," from the graph, we also want the edges ",(0,o.kt)("inlineCode",{parentName:"p"},"eve -> alice")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"eve -> bob")," to be removed."),(0,o.kt)("p",null,"The involved graph and its only edge collection has to be known. In this case it is the graph ",(0,o.kt)("strong",{parentName:"p"},"knows_graph")," and the edge collection ",(0,o.kt)("strong",{parentName:"p"},"knows"),"."),(0,o.kt)("p",null,"This query will delete ",(0,o.kt)("strong",{parentName:"p"},"eve")," with its adjacent edges:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"LET edgeKeys = (FOR v, e IN 1..1 ANY 'persons/eve' GRAPH 'knows_graph' RETURN e._key)\nLET r = (FOR key IN edgeKeys REMOVE key IN knows) \nREMOVE 'eve' IN persons\n")),(0,o.kt)("p",null,"This query executed several actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use a graph traversal of depth 1 to get the ",(0,o.kt)("inlineCode",{parentName:"li"},"_key")," of ",(0,o.kt)("strong",{parentName:"li"},"eve's")," adjacent edges"),(0,o.kt)("li",{parentName:"ul"},"remove all of these edges from the ",(0,o.kt)("inlineCode",{parentName:"li"},"knows")," collection"),(0,o.kt)("li",{parentName:"ul"},"remove vertex ",(0,o.kt)("strong",{parentName:"li"},"eve")," from the ",(0,o.kt)("inlineCode",{parentName:"li"},"persons")," collection")),(0,o.kt)("p",null,"The following query shows a different design to achieve the same result:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"LET edgeKeys = (FOR v, e IN 1..1 ANY 'persons/eve' GRAPH 'knows_graph'\n            REMOVE e._key IN knows)\nREMOVE 'eve' IN persons\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The query has to be adjusted to match a graph with multiple vertex/edge collections.")),(0,o.kt)("p",null,"For example, the ",(0,o.kt)("a",{target:"_blank",href:n(96690).Z},"city graph")," contains several vertex collections - ",(0,o.kt)("inlineCode",{parentName:"p"},"germanCity")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"frenchCity")," and several edge collections -  ",(0,o.kt)("inlineCode",{parentName:"p"},"french / german / international Highway"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example Graph2",src:n(62417).Z,width:"992",height:"777"})),(0,o.kt)("p",null,"To delete city ",(0,o.kt)("strong",{parentName:"p"},"Berlin")," all edge collections ",(0,o.kt)("inlineCode",{parentName:"p"},"french / german / international Highway")," have to be considered. The ",(0,o.kt)("strong",{parentName:"p"},"REMOVE")," operation has to be applied on all edge collections with ",(0,o.kt)("inlineCode",{parentName:"p"},"OPTIONS { ignoreErrors: true }"),". Not using this option will stop the query whenever a non existing key should be removed in a collection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"LET edgeKeys = (FOR v, e IN 1..1 ANY 'germanCity/Berlin' GRAPH 'routeplanner' RETURN e._key)\nLET r = (FOR key IN edgeKeys REMOVE key IN internationalHighway\n        OPTIONS { ignoreErrors: true } REMOVE key IN germanHighway\n        OPTIONS { ignoreErrors: true } REMOVE key IN frenchHighway\n        OPTIONS { ignoreErrors: true }) \nREMOVE 'Berlin' IN germanCity\n")))}m.isMDXComponent=!0},96690:function(e,t,n){t.Z=n.p+"assets/files/cities_graph-d8e1073687e912930a91dbfc98bd8fe3.png"},71824:function(e,t,n){t.Z=n.p+"assets/files/knows_graph-9cdc308841d80700b1dff486dbf1f638.png"},62417:function(e,t,n){t.Z=n.p+"assets/images/cities_graph-d8e1073687e912930a91dbfc98bd8fe3.png"},39014:function(e,t,n){t.Z=n.p+"assets/images/knows_graph-9cdc308841d80700b1dff486dbf1f638.png"}}]);