"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[66012],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53250:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var r=n(83117),a=n(80102),l=(n(67294),n(3905)),o=["components"],i={title:"csv (Source Mapper)"},p=void 0,s={unversionedId:"cep/reference/functions/sourcemapper/csv",id:"cep/reference/functions/sourcemapper/csv",title:"csv (Source Mapper)",description:"This extension is used to convert CSV message to Stream App event input",source:"@site/docs/cep/reference/functions/sourcemapper/csv.md",sourceDirName:"cep/reference/functions/sourcemapper",slug:"/cep/reference/functions/sourcemapper/csv",permalink:"/docs/cep/reference/functions/sourcemapper/csv",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/functions/sourcemapper/csv.md",tags:[],version:"current",frontMatter:{title:"csv (Source Mapper)"},sidebar:"tutorialSidebar",previous:{title:"binary (Source Mapper)",permalink:"/docs/cep/reference/functions/sourcemapper/binary"},next:{title:"json (Source Mapper)",permalink:"/docs/cep/reference/functions/sourcemapper/json"}},u={},c=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This extension is used to convert CSV message to Stream App event input\nmapper. You can either receive pre-defined CSV message where event\nconversion takes place without extra configurations,or receive custom\nCSV message where a custom place order to map from custom CSV message."),(0,l.kt)("p",null,"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'CREATE SOURCE <NAME> WITH (map.type="csv", map.delimiter="<STRING>", map.header.present="<BOOL>", map.fail.on.unknown.attribute="<BOOL>", map.event.grouping.enabled="<BOOL>")\n')),(0,l.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delimiter"),(0,l.kt)("td",{parentName:"tr",align:null},"When converting a CSV format message to Stream App event, this parameter indicatesinput CSV message's data should be split by this parameter"),(0,l.kt)("td",{parentName:"tr",align:null},","),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"header.present"),(0,l.kt)("td",{parentName:"tr",align:null},"When converting a CSV format message to Stream App event, this parameter indicates whether CSV message has header or not. This can either have value true or false.If it's set to ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," then it indicates that CSV message has't header."),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fail.on.unknown.attribute"),(0,l.kt)("td",{parentName:"tr",align:null},"This parameter specifies how unknown attributes should be handled. If it's set to ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," and one or more attributes don't havevalues, then SP will drop that message. If this parameter is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),", the Stream Processor adds the required attribute's values to such events with a null value and the event is converted to a Stream App event."),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event.grouping.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"This parameter specifies whether event grouping is enabled or not. To receive a group of events together and generate multiple events, this parameter must be set to ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h2",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"CREATE SOURCE FooStream WITH (type='inMemory', topic='stock', map.type='csv') (symbol string, price float, volume int);\n")),(0,l.kt)("p",null,'Above configuration will do a default CSV input mapping. Expected input\nwill look like below:  gdn ,55.6 , 100OR  "gdn,No10,Palam Groove\nRd,Col-03" ,55.6 , 100If header.present is true and delimiter is "-",\nthen the input is as follows: symbol-price-volumegdn-55.6-100'),(0,l.kt)("h2",{id:"example-2"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"CREATE SOURCE FooStream WITH (type='inMemory', topic='stock', map.type='csv', header='true', map.attributes=\"symbol = '2', price = '0', volume = '1'\") (symbol string, price float, volume long);\n")),(0,l.kt)("p",null,"Above configuration will perform a custom CSV mapping. Here, user can add place order of each attribute in the @attribute. The place order indicates where the attribute name's value has appeared in the input.Expected input will look like below: "),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'55.6,100,gdn OR55.6,100,"gdn,No10,Palm Groove Rd,Col-03"')," "),(0,l.kt)("p",null,'If header is true and delimiter is "-", then the output is as follows: ',(0,l.kt)("inlineCode",{parentName:"p"},"price-volume-symbol 55.6-100-gdn")," "),(0,l.kt)("p",null,"If group events is enabled then input should be as follows: ",(0,l.kt)("inlineCode",{parentName:"p"},"price-volume-symbol 55.6-100-gdnSystem.lineSeparator() 55.6-100-IBMSystem.lineSeparator() 55.6-100-IFSSystem.lineSeparator()")))}d.isMDXComponent=!0}}]);