"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79945],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:function(e,n,t){t.d(n,{Z:function(){return i}});var r=t(67294),a=t(34334),o="tabItem_Ymn6";function i(e){var n=e.children,t=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:t},n)}},65488:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(83117),a=t(67294),o=t(34334),i=t(72389),l=t(67392),s=t(7094),u=t(12466),c="tabList__CuJ",p="tabItem_LNqP";function m(e){var n,t,i=e.lazy,m=e.block,d=e.defaultValue,f=e.values,y=e.groupId,v=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=f?f:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,l.l)(k,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var I=null===d?d:null!=(n=null!=d?d:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:b[0].props.value;if(null!==I&&!k.some((function(e){return e.value===I})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+I+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,s.U)(),E=g.tabGroupChoices,P=g.setTabGroupChoices,A=(0,a.useState)(I),O=A[0],T=A[1],w=[],_=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=y){var C=E[y];null!=C&&C!==O&&k.some((function(e){return e.value===C}))&&T(C)}var N=function(e){var n=e.currentTarget,t=w.indexOf(n),r=k[t].value;r!==O&&(_(n),T(r),null!=y&&P(y,String(r)))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r,a=w.indexOf(e.currentTarget)+1;t=null!=(r=w[a])?r:w[0];break;case"ArrowLeft":var o,i=w.indexOf(e.currentTarget)-1;t=null!=(o=w[i])?o:w[w.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":m},v)},k.map((function(e){var n=e.value,t=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:function(e){return w.push(e)},onKeyDown:D,onFocus:N,onClick:N},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),i?(0,a.cloneElement)(b.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}function d(e){var n=(0,i.Z)();return a.createElement(m,(0,r.Z)({key:String(n)},e))}},15693:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return d}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),i=t(65488),l=t(85162),s=["components"],u={sidebar_position:70,title:"Remove API Key"},c=void 0,p={unversionedId:"sdks/remove-api-key",id:"sdks/remove-api-key",title:"Remove API Key",description:"Remove an API Key",source:"@site/docs/sdks/remove-api-key.md",sourceDirName:"sdks",slug:"/sdks/remove-api-key",permalink:"/docs/sdks/remove-api-key",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/sdks/remove-api-key.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,title:"Remove API Key"},sidebar:"tutorialSidebar",previous:{title:"Clear Access Levels",permalink:"/docs/sdks/clear-access-levels"},next:{title:"Command Line Interface",permalink:"/docs/cli/"}},m={},d=[{value:"Remove an API Key",id:"remove-an-api-key",level:2}],f={toc:d};function y(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"remove-an-api-key"},"Remove an API Key"),(0,o.kt)(i.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Remove an api key\ntry{\n    await client.removeApiKey(keyid);\n}\ncatch(e){\n    console.log('API Deletion Failed: ', e);   \n}\n"))),(0,o.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'from c8 import C8Client\n\nAPI_ACTIVE = False\nCHOSEN_API_KEY_ID = "myNewKey"\nAPI_KEY = "my API key" # Change this to my key\nURL = "gdn.paas.macrometa.io"\n\n# Create a connection to GDN. Replace apikey with username and password if needed\nclient = C8Client(protocol=\'https\', host=URL, port=443, apikey = API_KEY)\n\n                        \n# Get a list of all the API key ID\'s names\napiKeyIds = []\nfor api in client.list_all_api_keys():\n    apiKeyIds.append(api["keyid"])\n\n# Checks if the API key exists\nfor apiElement in apiKeyIds:\n    if apiElement == CHOSEN_API_KEY_ID:\n        API_ACTIVE = True\n        break\n\n# Checks the specified API key\nif API_ACTIVE:\n    # Removes the chosen API key\n    try:\n        print("Remove API key: ", client.remove_api_key(CHOSEN_API_KEY_ID))\n    except Exception as err:\n        print("Error removing the API key.")\n        print(err)\nelse:\n    # Displays a message that the key does not exist\n    print("Can\'t remove a non-existent key.")\n'))),(0,o.kt)(l.Z,{value:"RA",label:"Rest API",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'FEDERATION = "api-gdn.macrometa.io"\nFED_URL = "https://{}".format(FEDERATION)\nkeyid = "id1"\n# Delete an API Key\nurl = FED_URL + "/_api/key/"+ keyid\nresp = session.delete(url, data = json.dumps(payload))\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("API Key Deleted: ", resp)\n')))))}y.isMDXComponent=!0}}]);