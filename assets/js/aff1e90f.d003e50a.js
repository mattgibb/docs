"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94727],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(n),m=a,d=f["".concat(o,".").concat(m)]||f[m]||s[m]||c;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=f;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<c;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},78517:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var r=n(83117),a=n(80102),c=(n(67294),n(3905)),i=["components"],l={title:"charFrequency (Function)"},o=void 0,u={unversionedId:"cep/reference/functions/str/charFrequency",id:"cep/reference/functions/str/charFrequency",title:"charFrequency (Function)",description:"Gives the frequency of a char in input string.",source:"@site/docs/cep/reference/functions/str/charFrequency.md",sourceDirName:"cep/reference/functions/str",slug:"/cep/reference/functions/str/charFrequency",permalink:"/docs/cep/reference/functions/str/charFrequency",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/functions/str/charFrequency.md",tags:[],version:"current",frontMatter:{title:"charFrequency (Function)"},sidebar:"tutorialSidebar",previous:{title:"charAt (Function)",permalink:"/docs/cep/reference/functions/str/charAt"},next:{title:"coalesce (Function)",permalink:"/docs/cep/reference/functions/str/coalesce"}},p={},s=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2}],f={toc:s};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Gives the frequency of a char in ",(0,c.kt)("inlineCode",{parentName:"p"},"input string"),"."),(0,c.kt)("p",null,"Syntax"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"<LONG> str:charFrequency(<STRING> input.string, <STRING> char)\n")),(0,c.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"Name"),(0,c.kt)("th",{parentName:"tr",align:null},"Description"),(0,c.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,c.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,c.kt)("th",{parentName:"tr",align:null},"Optional"),(0,c.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"input.string"),(0,c.kt)("td",{parentName:"tr",align:null},"The input string to be processed."),(0,c.kt)("td",{parentName:"tr",align:null}),(0,c.kt)("td",{parentName:"tr",align:null},"STRING"),(0,c.kt)("td",{parentName:"tr",align:null},"No"),(0,c.kt)("td",{parentName:"tr",align:null},"Yes")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"char"),(0,c.kt)("td",{parentName:"tr",align:null},"The char's number of occurrences to be calculated"),(0,c.kt)("td",{parentName:"tr",align:null}),(0,c.kt)("td",{parentName:"tr",align:null},"STRING"),(0,c.kt)("td",{parentName:"tr",align:null},"No"),(0,c.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,c.kt)("h2",{id:"example-1"},"Example 1"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'str:charFrequency("gdn,ABM,NSFT", ",")\n')),(0,c.kt)("p",null,"This counts the number of occurrences of ",(0,c.kt)("inlineCode",{parentName:"p"},",")," in the given\n",(0,c.kt)("inlineCode",{parentName:"p"},"input.string"),". In this scenario, the output will is ",(0,c.kt)("inlineCode",{parentName:"p"},"2"),"."))}m.isMDXComponent=!0}}]);