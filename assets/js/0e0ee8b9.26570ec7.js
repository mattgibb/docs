"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62340],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),m=p(n),g=a,d=m["".concat(s,".").concat(g)]||m[g]||c[g]||l;return n?r.createElement(d,i(i({ref:t},o),{},{components:n})):r.createElement(d,i({ref:t},o))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5079:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return c}});var r=n(83117),a=n(80102),l=(n(67294),n(3905)),i=["components"],u={title:"substr (Function)"},s=void 0,p={unversionedId:"cep/reference/functions/str/substr",id:"cep/reference/functions/str/substr",title:"substr (Function)",description:"Returns a substring of the input string by considering a subset or all",source:"@site/docs/cep/reference/functions/str/substr.md",sourceDirName:"cep/reference/functions/str",slug:"/cep/reference/functions/str/substr",permalink:"/docs/cep/reference/functions/str/substr",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/functions/str/substr.md",tags:[],version:"current",frontMatter:{title:"substr (Function)"},sidebar:"tutorialSidebar",previous:{title:"strcmp (Function)",permalink:"/docs/cep/reference/functions/str/strcmp"},next:{title:"tokenize (Stream Processor)",permalink:"/docs/cep/reference/functions/str/tokenize"}},o={},c=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2}],m={toc:c};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Returns a substring of the input string by considering a subset or all\nof the following factors: starting index, length, regular expression,\nand regex group number."),(0,l.kt)("p",null,"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"<STRING> str:substr(<STRING> input.string, <INT> begin.index)\n<STRING> str:substr(<STRING> input.string, <INT> begin.index, <INT> length)\n<STRING> str:substr(<STRING> input.string, <STRING> regex)\n<STRING> str:substr(<STRING> input.string, <STRING> regex, <INT> group.number)\n")),(0,l.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input.string"),(0,l.kt)("td",{parentName:"tr",align:null},"The input string to be processed."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"begin.index"),(0,l.kt)("td",{parentName:"tr",align:null},"Starting index to consider for the substring."),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"length"),(0,l.kt)("td",{parentName:"tr",align:null},"The length of the substring."),(0,l.kt)("td",{parentName:"tr",align:null},"`","input.string","`",".length - ","`","begin.index","`"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"regex"),(0,l.kt)("td",{parentName:"tr",align:null},"The regular expression that should be matched with the input string."),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"group.number"),(0,l.kt)("td",{parentName:"tr",align:null},"The regex group number"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,l.kt)("h2",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'substr("AbCDefghiJ KLMN", 4)\n')),(0,l.kt)("p",null,"This outputs the substring based on the given ",(0,l.kt)("inlineCode",{parentName:"p"},"begin.index"),'. In this\nscenario, the output is "efghiJ KLMN".'),(0,l.kt)("h2",{id:"example-2"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'substr("AbCDefghiJ KLMN",  2, 4)\n')),(0,l.kt)("p",null,"This outputs the substring based on the given ",(0,l.kt)("inlineCode",{parentName:"p"},"begin.index"),' and length.\nIn this scenario, the output is "CDef".'),(0,l.kt)("h2",{id:"example-3"},"Example 3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    substr(\"gdnD efghiJ KLMN\", '^gdn(.*)')\n")),(0,l.kt)("p",null,'This outputs the substring by applying the regex. In this scenario, the\noutput is "gdnD efghiJ KLMN".'),(0,l.kt)("h2",{id:"example-4"},"Example 4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"substr(\"gdn cep gdn XX E hi hA gdn heAllo\",  'gdn(.*)A(.*)',  2)\n")),(0,l.kt)("p",null,"This outputs the substring by applying the regex and considering the\n",(0,l.kt)("inlineCode",{parentName:"p"},"group.number"),'. In this scenario, the output is " ello".'))}g.isMDXComponent=!0}}]);