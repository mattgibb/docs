"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9560],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var l=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,l,o=function(e,n){if(null==e)return{};var t,l,o={},c=Object.keys(e);for(l=0;l<c.length;l++)t=c[l],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(l=0;l<c.length;l++)t=c[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var r=l.createContext({}),s=function(e){var n=l.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return l.createElement(r.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},u=l.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,r=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(t),g=o,m=u["".concat(r,".").concat(g)]||u[g]||d[g]||c;return t?l.createElement(m,a(a({ref:n},p),{},{components:t})):l.createElement(m,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,a=new Array(c);a[0]=u;var i={};for(var r in n)hasOwnProperty.call(n,r)&&(i[r]=n[r]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<c;s++)a[s]=t[s];return l.createElement.apply(null,a)}return l.createElement.apply(null,t)}u.displayName="MDXCreateElement"},63305:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return r},default:function(){return g},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var l=t(83117),o=t(80102),c=(t(67294),t(3905)),a=["components"],i={title:"Collections Commands"},r="Collections (gdnsl collection)",s={unversionedId:"cli/collections-cli",id:"cli/collections-cli",title:"Collections Commands",description:"Commands to work with document and edge collections.",source:"@site/docs/cli/collections-cli.md",sourceDirName:"cli",slug:"/cli/collections-cli",permalink:"/docs/cli/collections-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cli/collections-cli.md",tags:[],version:"current",frontMatter:{title:"Collections Commands"},sidebar:"tutorialSidebar",previous:{title:"Client Version Commands",permalink:"/docs/cli/client-version-cli"},next:{title:"Config Map Commands",permalink:"/docs/cli/config-map-cli"}},p={},d=[{value:"gdnsl collection create",id:"gdnsl-collection-create",level:2},{value:"gdnsl collection list",id:"gdnsl-collection-list",level:2},{value:"gdnsl collection delete",id:"gdnsl-collection-delete",level:2},{value:"gdnsl collection describe",id:"gdnsl-collection-describe",level:2},{value:"gdnsl collection update",id:"gdnsl-collection-update",level:2}],u={toc:d};function g(e){var n=e.components,t=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,l.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"collections-gdnsl-collection"},"Collections (gdnsl collection)"),(0,c.kt)("p",null,"Commands to work with document and edge collections."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection [flags]\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Help for collection command group\n  gdnsl collection -h\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                Help for collections.\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,c.kt)("h2",{id:"gdnsl-collection-create"},"gdnsl collection create"),(0,c.kt)("p",null,"Create a document or edge collection."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection create [flags] NAME\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Create a global cities document collection\n  gdnsl collection create cities --type doc \n\n  # Create a global cities edge collection\n  gdnsl collection create cities --type edge \n\n  # Create a global cities document collection and enable collection stream\n  gdnsl collection create cities --type doc --stream \n\n\n  # Create a local cities document collection and enable collection stream\n  gdnsl collection create cities --type doc --stream --local \n\n  # Create a global cities document collection with custom key generator\n  gdnsl collection create cities --type doc --keygen traditional --userkeys \n\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help for service.\n      --type string         Specifies type of the collection. Values - "doc" or "edge". Default - "doc".\n      --stream              Enable stream on the collection. Default - false\n      --local               Specifies whether it is a local collection.\n      --userkeys            Allow users to specify their own keys.\n      --keygen              The keygenerator to use by GDN. Values - traditional, autoincrement, uuid and padded\n                            traditional -  This key generator generates numerical keys in ascending order\n                            autoincrement- This key generator generates numerical keys in ascending order, the initial offset and the spacing can be configured\n                            uuid - This key generator generates universally unique 128 bit keys, which are stored in hexadecimal human-readable format. The keys are not lexicographically sorted.\n                            padded - This key generator generates keys of a fixed length (16 bytes) in ascending lexicographical sort order.\n      --keyincrement int    Increment value for autoincrement key generator. Not used for other key generator types.\n      --keyoffset int       Initial offset value for autoincrement key generator. Not used for other key generator types.\n      --system              Specifies whether it is a system collection. Only mm admins can create system collections.\n      --fabric              Name of the fabric to use.\n')),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file. (default is ./gdnsl.yaml)\n")),(0,c.kt)("h2",{id:"gdnsl-collection-list"},"gdnsl collection list"),(0,c.kt)("p",null,"List collections."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection list [flags]\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # List all collections except system collections\n  gdnsl collection list\n\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                Help to list collections.\n      --fabric              Name of the fabric to use.\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,c.kt)("h2",{id:"gdnsl-collection-delete"},"gdnsl collection delete"),(0,c.kt)("p",null,"Delete a document or edge collection."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection delete [flags] NAME\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Delete a cities document collection\n  gdnsl collection delete cities\n\n  # Delete a cities edge collection\n  gdnsl collection delete cities\n\n  # Delete a cities edge collection which is a system collection\n  gdnsl collection delete _cities --system \n\n  # Remove all documents from cities collection but leave the indexes intact\n  gdnsl collection delete cities --truncate \n\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"  -h, --help                Help for service.\n      --truncate            Remove all documents from the collection but leave the indexes intact.\n      --system              Specifies whether it is a system collection. Only mm admins can create system collections.\n      --fabric              Name of the fabric to use.\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,c.kt)("h2",{id:"gdnsl-collection-describe"},"gdnsl collection describe"),(0,c.kt)("p",null,"Get details of a collection."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection describe [flags] NAME\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Get details of cities collection\n  gdnsl collection describe cities\n\n  # Count documents in cities collection\n  gdnsl collection describe cities --count \n\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                Help for service.\n      --count               To return number of documents in the collection.\n      --fabric              Name of the fabric to use.\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,c.kt)("h2",{id:"gdnsl-collection-update"},"gdnsl collection update"),(0,c.kt)("p",null,"Update a collection."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl collection update [flags] NAME\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Examples:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"\n    # Enable stream on collection cities\n    gdnsl collection update cities --stream \n\n    # Disable stream on collection cities\n    gdnsl collection update cities --no-stream\n\n    # Enable waitForSync on collection cities\n    gdnsl collection update cities --wait-for-sync \n\n    # Disable waitForSync on collection cities\n    gdnsl collection update cities --no-wait-for-sync\n\n    # Enable stream and waitForSync on collection cities\n    gdnsl collection update cities --stream --wait-for-sync \n\n    # Disable stream and waitForSync on collection cities\n    gdnsl collection update cities --no-stream  --no-wait-for-sync\n\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to update a collection.\n      --stream                Enable stream on the collection.\n      --no-stream             Disable stream on the collection.\n      --wait-for-sync         Enable waitForSync on the collection.\n      --no-wait-for-sync      Disable waitForSync on the collection.\n      --fabric                Name of the fabric to use.\n")),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Options inherited:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")))}g.isMDXComponent=!0}}]);