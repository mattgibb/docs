"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80687],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return m}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),u=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},s=function(e){var r=u(e.components);return t.createElement(i.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=u(n),m=o,y=f["".concat(i,".").concat(m)]||f[m]||l[m]||a;return n?t.createElement(y,c(c({ref:r},s),{},{components:n})):t.createElement(y,c({ref:r},s))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var u=2;u<a;u++)c[u]=n[u];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},92957:function(e,r,n){n.r(r),n.d(r,{assets:function(){return s},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return l}});var t=n(83117),o=n(80102),a=(n(67294),n(3905)),c=["components"],p={title:"binary (Source Mapper)"},i=void 0,u={unversionedId:"cep/reference/functions/sourcemapper/binary",id:"cep/reference/functions/sourcemapper/binary",title:"binary (Source Mapper)",description:"This extension is a binary input mapper that converts events received in",source:"@site/docs/cep/reference/functions/sourcemapper/binary.md",sourceDirName:"cep/reference/functions/sourcemapper",slug:"/cep/reference/functions/sourcemapper/binary",permalink:"/docs/cep/reference/functions/sourcemapper/binary",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/functions/sourcemapper/binary.md",tags:[],version:"current",frontMatter:{title:"binary (Source Mapper)"},sidebar:"tutorialSidebar",previous:{title:"avro (Source Mapper)",permalink:"/docs/cep/reference/functions/sourcemapper/avro"},next:{title:"csv (Source Mapper)",permalink:"/docs/cep/reference/functions/sourcemapper/csv"}},s={},l=[{value:"Example 1",id:"example-1",level:2}],f={toc:l};function m(e){var r=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This extension is a binary input mapper that converts events received in\n",(0,a.kt)("inlineCode",{parentName:"p"},"binary")," format to Stream App events before they are processed."),(0,a.kt)("p",null,"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'CREATE SOURCE <NAME> WITH (map.type="binary")\n')),(0,a.kt)("h2",{id:"example-1"},"Example 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CREATE SOURCE FooStream WITH (type='inMemory', topic='gdn', map.type='binary') (symbol string, price float, volume long);\n")),(0,a.kt)("p",null,"This query performs a mapping to convert an event of the ",(0,a.kt)("inlineCode",{parentName:"p"},"binary")," format\nto a Stream App event."))}m.isMDXComponent=!0}}]);