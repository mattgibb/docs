"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7632],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},10221:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(83117),r=n(80102),l=(n(67294),n(3905)),i=["components"],o={title:"http (Source)"},s=void 0,p={unversionedId:"cep/reference/functions/source/http",id:"cep/reference/functions/source/http",title:"http (Source)",description:"HTTP source receives POST requests via HTTP and HTTPS protocols in",source:"@site/docs/cep/reference/functions/source/http.md",sourceDirName:"cep/reference/functions/source",slug:"/cep/reference/functions/source/http",permalink:"/docs/cep/reference/functions/source/http",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/functions/source/http.md",tags:[],version:"current",frontMatter:{title:"http (Source)"},sidebar:"tutorialSidebar",previous:{title:"http-service (Source)",permalink:"/docs/cep/reference/functions/source/http-service"},next:{title:"inMemory (Source)",permalink:"/docs/cep/reference/functions/source/inMemory"}},d={},u=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"System Parameters",id:"system-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"HTTP source receives POST requests via HTTP and HTTPS protocols in\nformat such as ",(0,l.kt)("inlineCode",{parentName:"p"},"text"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"XML")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON"),". It also supports basic\nauthentication to ensure events are received from authorized\nusers/systems. The request headers and properties can be accessed via\ntransport properties in the format ",(0,l.kt)("inlineCode",{parentName:"p"},"trp:<header>"),"."),(0,l.kt)("p",null,"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'CREATE SOURCE <NAME> WITH (type="http", map.type="<STRING>", receiver.url="<STRING>", basic.auth.enabled="<STRING>", worker.count="<INT>", socket.idle.timeout="<INT>", ssl.verify.client="<STRING>", ssl.protocol="<STRING>", tls.store.type="<STRING>", ssl.configurations="<STRING>", request.size.validation.configurations="<STRING>", header.validation.configurations="<STRING>", server.bootstrap.configurations="<STRING>", trace.log.enabled="<BOOL>")\n')),(0,l.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"receiver.url"),(0,l.kt)("td",{parentName:"tr",align:null},"The URL on which events should be received. To enable SSL use ",(0,l.kt)("inlineCode",{parentName:"td"},"https")," protocol in the url."),(0,l.kt)("td",{parentName:"tr",align:null},"`",(0,l.kt)("a",{parentName:"td",href:"http://0.0.0.0:9763//%5C%60"},"http://0.0.0.0:9763//\\`")),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"basic.auth.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"This only works in VM, Docker and Kubernetes. Where when enabled it authenticates each request using the ",(0,l.kt)("inlineCode",{parentName:"td"},"Authorization:'Basic encodeBase64(username:Password)'")," header."),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"worker.count"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of active worker threads to serve the incoming events. By default the value is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"1")," to ensure events are processed in the same order they arrived. By increasing this value, higher performance can be achieved in the expense of loosing event ordering."),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"socket.idle.timeout"),(0,l.kt)("td",{parentName:"tr",align:null},"Idle timeout for HTTP connection in millis."),(0,l.kt)("td",{parentName:"tr",align:null},"120000"),(0,l.kt)("td",{parentName:"tr",align:null},"INT"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ssl.verify.client"),(0,l.kt)("td",{parentName:"tr",align:null},"The type of client certificate verification. Supported values are ",(0,l.kt)("inlineCode",{parentName:"td"},"require"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"optional"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ssl.protocol"),(0,l.kt)("td",{parentName:"tr",align:null},"SSL/TLS protocol."),(0,l.kt)("td",{parentName:"tr",align:null},"TLS"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tls.store.type"),(0,l.kt)("td",{parentName:"tr",align:null},"TLS store type."),(0,l.kt)("td",{parentName:"tr",align:null},"JKS"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ssl.configurations"),(0,l.kt)("td",{parentName:"tr",align:null},"SSL/TSL configurations in format ",(0,l.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported parameters:  - SSL/TLS protocols: ",(0,l.kt)("inlineCode",{parentName:"td"},"'sslEnabledProtocols:TLSv1.1,TLSv1.2'"),"  - List of ciphers: ",(0,l.kt)("inlineCode",{parentName:"td"},"'ciphers:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'"),"  - Enable session creation: ",(0,l.kt)("inlineCode",{parentName:"td"},"'client.enable.session.creation:true'"),"  - Supported server names: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.suported.server.names:server'"),"  - Add HTTP SNIMatcher: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.supported.snimatchers:SNIMatcher'")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"request.size.validation.configurations"),(0,l.kt)("td",{parentName:"tr",align:null},"Configurations to validate the HTTP request size. Expected format ",(0,l.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported configurations :  - Enable request size validation: ",(0,l.kt)("inlineCode",{parentName:"td"},"'request.size.validation:true'"),"  If request size is validated  - Maximum request size: ",(0,l.kt)("inlineCode",{parentName:"td"},"'request.size.validation.maximum.value:2048'"),"  - Response status code when request size validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'request.size.validation.reject.status.code:401'"),"  - Response message when request size validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'request.size.validation.reject.message:Message is bigger than the valid size'"),"  - Response Content-Type when request size validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'request.size.validation.reject.message.content.type:plain/text'")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"header.validation.configurations"),(0,l.kt)("td",{parentName:"tr",align:null},"Configurations to validate HTTP headers. Expected format ",(0,l.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported configurations :  - Enable header size validation: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.size.validation:true'"),"  If header size is validated  - Maximum length of initial line: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.maximum.request.line:4096'"),"  - Maximum length of all headers: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.maximum.size:8192'"),"  - Maximum length of the content or each chunk: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.maximum.chunk.size:8192'"),"  - Response status code when header validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.reject.status.code:401'"),"  - Response message when header validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.reject.message:Message header is bigger than the valid size'"),"  - Response Content-Type when header validation fails: ",(0,l.kt)("inlineCode",{parentName:"td"},"'header.validation.reject.message.content.type:plain/text'")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.bootstrap.configurations"),(0,l.kt)("td",{parentName:"tr",align:null},"Server bootstrap configurations in format ",(0,l.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported configurations :  - Server connect timeout in millis: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.connect.timeout:15000'"),"  - Server socket timeout in seconds: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.socket.timeout:15'"),"  - Enable TCP no delay: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.nodelay:true'"),"  - Enable server keep alive: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.keepalive:true'"),"  - Send buffer size: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.sendbuffersize:1048576'"),"  - Receive buffer size: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.recievebuffersize:1048576'"),"  - Number of connections queued: ",(0,l.kt)("inlineCode",{parentName:"td"},"'server.bootstrap.socket.backlog:100'")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trace.log.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable trace log for traffic monitoring."),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h2",{id:"system-parameters"},"System Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Parameters"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serverBootstrapBossGroupSize"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of boss threads to accept incoming connections."),(0,l.kt)("td",{parentName:"tr",align:null},"Number of available processors"),(0,l.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serverBootstrapWorkerGroupSize"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of worker threads to accept the connections from boss threads and perform non-blocking read and write from one or more channels."),(0,l.kt)("td",{parentName:"tr",align:null},"(Number of available processors) ","*"," 2"),(0,l.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serverBootstrapClientGroupSize"),(0,l.kt)("td",{parentName:"tr",align:null},"Number of client threads to perform non-blocking read and write to one or more channels."),(0,l.kt)("td",{parentName:"tr",align:null},"(Number of available processors) ","*"," 2"),(0,l.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultHost"),(0,l.kt)("td",{parentName:"tr",align:null},"The default host of the transport."),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"Any valid host")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultScheme"),(0,l.kt)("td",{parentName:"tr",align:null},"The default protocol."),(0,l.kt)("td",{parentName:"tr",align:null},"http"),(0,l.kt)("td",{parentName:"tr",align:null},"http https")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultHttpPort"),(0,l.kt)("td",{parentName:"tr",align:null},"The default HTTP port when default scheme is ",(0,l.kt)("inlineCode",{parentName:"td"},"http"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"8280"),(0,l.kt)("td",{parentName:"tr",align:null},"Any valid port")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultHttpsPort"),(0,l.kt)("td",{parentName:"tr",align:null},"The default HTTPS port when default scheme is ",(0,l.kt)("inlineCode",{parentName:"td"},"https"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"8243"),(0,l.kt)("td",{parentName:"tr",align:null},"Any valid port")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keyStoreLocation"),(0,l.kt)("td",{parentName:"tr",align:null},"The default keystore file path."),(0,l.kt)("td",{parentName:"tr",align:null},"`","\\${carbon.home}/resources/security/gdncarbon.jks","`"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to ","`",".jks","`"," file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keyStorePassword"),(0,l.kt)("td",{parentName:"tr",align:null},"The default keystore password."),(0,l.kt)("td",{parentName:"tr",align:null},"gdncarbon"),(0,l.kt)("td",{parentName:"tr",align:null},"Keystore password as string")))),(0,l.kt)("h2",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@app.name('StockProcessor')\n\nCREATE SOURCE StockStream WITH (type='http', map.type='json') (symbol string, price float, volume long);\n")),(0,l.kt)("p",null,"Above HTTP source listeners on url\n",(0,l.kt)("inlineCode",{parentName:"p"},"http://0.0.0.0:9763/StockProcessor/StockStream")," for JSON messages on\nthe format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n  "event": {\n    "symbol": "FB",\n    "price": 24.5,\n    "volume": 5000\n  }\n}\n')),(0,l.kt)("p",null,"It maps the incoming messages and sends them to ",(0,l.kt)("inlineCode",{parentName:"p"},"StockStream")," for\nprocessing."),(0,l.kt)("h2",{id:"example-2"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"CREATE SOURCE StockStream WITH (type='http', receiver.url='http://localhost:5005/stocks', map.type='xml') (symbol string, price float, volume long);\n")),(0,l.kt)("p",null,"Above HTTP source listeners on url ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:5005/stocks")," for\nJSON messages on the format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"<events>\n    <event>\n        <symbol>Fb</symbol>\n        <price>55.6</price>\n        <volume>100</volume>\n    </event>\n</events>\n")),(0,l.kt)("p",null,"It maps the incoming messages and sends them to ",(0,l.kt)("inlineCode",{parentName:"p"},"StockStream")," for\nprocessing."))}c.isMDXComponent=!0}}]);